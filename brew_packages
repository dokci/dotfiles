#!/bin/sh

packages=(
    'coreutils'
    'findutils'
    'binutils'
    'patchutils'
    'gdb'
    'htop-osx'
    'hg'
    'bazaar'
    'sshfs'
    'pkg-config'
    'brew-cask'
    'ctags'
    'python'
    'gh'
    'git-flow'
    'git-extras'
    'tree'
    'node'
    'mercurial'
    'gnupg'
    'ack'
    'automake'
    'gcc'
    'openssl'
    'awscli'
    'ruby'
    'ruby-install'
    'gnupg'
    'packer'
    'pyenv'
    'pyenv-virtualenvwrapper'
    'reattach-to-user-namespace'
    'tmux'
    'vim'
    'go'
    'docker'
    'boot2docker'
    'fig'
    'xz'
    'fleetctl'
    'unzip'
    'chgems'
    'rename'
    'md5sha1sum'
    'wget'
    'curl'
    'nmap'
    'nginx'
    'libyaml'
    'zsh'
)

function brew_install() {
    local_packages=("${@}")

    echo "\nUpdating brew..."
    brew update

    echo "Running brew doctor..."
    brew doctor

    echo "\nInstalling brew cask..."
    for package in "${local_packages[@]}"; do
        echo "\n\n"
        echo "Installing $package next."
        brew install $package
        if [ $package == "brew-cask" ]
        then
            echo "Tapping the phinze/homebrew-cask..."
            brew tap phinze/homebrew-cask
        fi
    done
}

function brew_uninstall() {
    local_packages=("${@}")

    while true; do
    read -p "Do you want to uninstall the brew packages? [y/n]" yn
    case $yn in
        [Yy]* ) brew doctor
                brew cleanup
                for package in "${local_packages[@]}"; do
                    brew uninstall $package --force
                done
                break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.\n";;
    esac
done
}
